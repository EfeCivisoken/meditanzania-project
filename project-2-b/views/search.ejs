<%- include('components/header', { title: __('search.title') }) %>

    <h1 class="mb-4"><%= __('search.title') %></h1>
    
    <% if(facilities && facilities.length > 0) { %>
    <div class="d-flex align-items-center bg-light p-3 rounded shadow-sm mb-4">
      <form method="GET" class="d-flex flex-wrap align-items-center gap-3 w-100">
        <div class="form-check" style="margin-bottom: 0;">
          <label class="form-check-label">
            <strong><%= __('filter.selectType') %>:</strong>
          </label>
        </div>

        <% facilityTypes.forEach(function(type) { %>
          <div class="form-check form-check-inline">
            <input class="form-check-input" type="checkbox" name="types" value="<%= type %>" id="type-<%= type %>" <%= (selectedTypes || []).includes(type) ? 'checked' : '' %>>
            <label class="form-check-label" for="type-<%= type %>"><%= type %></label>
          </div>
        <% }); %>

        <% if (!query || query == '') { %>
          <input type="hidden" name="name" value="<%= query %>">
        <% } %>
        <input type="hidden" name="loc" value="<%= location %>">
        <input type="hidden" name="category" value="<%= categoryId %>">

        <button type="submit" class="btn btn-primary ms-auto">
          <%= __('filter.apply') %>
        </button>
      </form>
    </div>
  <% } %>

  <% if(noQuery || (facilities && facilities.length == 0)) { %>
  <p><%= __('search.noResults') %></p>
  <p><small><%= __('search.query') %>: <%= query %></small> &bull; <small><%= __('search.location') %>: <%= locationName %> [<%= locationType %>]</small></p>
  <% } else { %>
    <p><small><%= __('search.query') %>: <%= query %></small> &bull; <small><%= __('search.location') %>: <%= locationName %> [<%= locationType %>]</small></p>
  <% if(!categoryName && categoryName != '') { %>
  <p>Filtering by <%= categoryName %></p>
  <% } %>
  <div class="facilities-table">
    <div class="table-responsive">
      <table class="table table-hover mb-0">
        <thead>
          <tr>
            <th><%= __('facilities.table.score') %></th>
            <th><%=__('facilities.table.name')%></th>
            <th><%=__('facilities.table.type')%></th>
            <th><%=__('facilities.table.municipality')%></th>
            <th class="text-end"><%=__('facilities.table.actions')%></th>
          </tr>
        </thead>
        <tbody id="table-body">
          <% facilities.forEach((facility) => { %>
            <tr>
              <td class="align-middle">
                <span class="badge <%= facility.score ? (facility.score.score >= 3.5 ? 'bg-success' : (facility.score.score >= 2 ? 'bg-warning' : 'bg-danger')) : 'bg-danger' %> rating-badge" style="font-size: 0.9em; padding: 0.3em 0.6em;">
                  <%= facility.score?.score ?? '0.00' %> / 5.00
                </span>
              </td>
              <td class="align-middle"><%= facility.name %></td>
              <td class="align-middle"><%= facility.type %></td>
              <td class="align-middle"><%= facility.location.name %></td>
              <td class="text-end">
                <a href="facilities/<%= facility.id %>" class="btn btn-sm btn-outline-primary">
                  <%=__('facilities.viewDetails')%>
                </a>
                <% if(compareFacilities.includes(`${facility.id}`)) { %>
                  <button class="btn btn-outline-danger btn-sm" onclick="removeCompareFacility('<%= facility.id %>')"><%= __('btn.compareRemove') %></button>
                <% } else { %>
                  <button class="btn btn-outline-info btn-sm" onclick="addCompareFacility('<%= facility.id %>')"><%= __('btn.compareAdd') %></button>
                <% } %>
              </td>
            </tr>
          <% }); %>
          
          <% if (facilities.length === 0) { %>
            <tr>
              <td colspan="4" class="text-center py-4"><%=__('facilities.noFacilities')%></td>
            </tr>
          <% } %>
        </tbody>
      </table>
    </div>
  </div>

  <br>

  <nav aria-label="Search pagination">
    <ul class="pagination justify-content-center">
      <% if (currentPage > 1) { %>
        <li class="page-item">
          <a class="page-link" href="?page=<%= currentPage - 1 %><%= '&' + preservedQuery %>">&laquo;</a>
        </li>
      <% } else { %>
        <li class="page-item disabled">
          <span class="page-link">&laquo;</span>
        </li>
      <% } %>

      <% 
        const range = 1;
        const pageCount = totalPages;
        const startPage = Math.max(2, currentPage - range);
        const endPage = Math.min(pageCount - 1, currentPage + range);
      %>

      <li class="page-item <%= currentPage === 1 ? 'active' : '' %>">
        <a class="page-link" href="?page=1<%= '&' + preservedQuery %>">1</a>
      </li>

      <% if (startPage > 2) { %>
        <li class="page-item disabled"><span class="page-link">...</span></li>
      <% } %>

      <% for (let i = startPage; i <= endPage; i++) { %>
        <li class="page-item <%= i === currentPage ? 'active' : '' %>">
          <a class="page-link" href="?page=<%= i %><%= '&' + preservedQuery %>"><%= i %></a>
        </li>
      <% } %>

      <% if (endPage < pageCount - 1) { %>
        <li class="page-item disabled"><span class="page-link">...</span></li>
      <% } %>

      <% if (pageCount > 1) { %>
        <li class="page-item <%= currentPage === pageCount ? 'active' : '' %>">
          <a class="page-link" href="?page=<%= pageCount %><%= '&' + preservedQuery %>"><%= pageCount %></a>
        </li>
      <% } %>

      <% if (currentPage < totalPages) { %>
        <li class="page-item">
          <a class="page-link" href="?page=<%= currentPage + 1 %><%= '&' + preservedQuery %>">&raquo;</a>
        </li>
      <% } else { %>
        <li class="page-item disabled">
          <span class="page-link">&raquo;</span>
        </li>
      <% } %>
    </ul>
  </nav>

  <div class="d-flex justify-content-center mt-4">
    <a id="compare-link" class="btn btn-info btn-lg" href="/compare" style="<% if(compareFacilities.length == 0) { %>visibility: hidden;<% } %>"><%= __('btn.compare') %></a>
  </div>
</div>
</div>

<div id="toast-container"></div>

<script>
var compareListLength = <%- compareFacilities.length %>;
</script>
<script>
function addCompareFacility(facilityId) {
axios.post('/compare/add', {
  facility: facilityId
})
.then(response => {
  const toastContainer = document.getElementById('toast-container');
  if (toastContainer) {
    const toast = document.createElement('div');
    toast.className = 'toast align-items-center text-bg-success border-0';
    toast.setAttribute('role', 'alert');
    toast.setAttribute('aria-live', 'assertive');
    toast.setAttribute('aria-atomic', 'true');
    toast.innerHTML = `
      <div class="d-flex">
    <div class="toast-body">
      <%= __('compare.toast.addSuccess') %>
    </div>
    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
      </div>
    `;
    toastContainer.appendChild(toast);

    const bootstrapToast = new bootstrap.Toast(toast);
    bootstrapToast.show();

    toast.addEventListener('hidden.bs.toast', () => {
      toast.remove();
    });
  }
  const button = document.querySelector(`button[onclick="addCompareFacility('${facilityId}')"]`);
  if (button) {
    button.textContent = 'Remove from Comparison List';
    button.setAttribute('onclick', `removeCompareFacility('${facilityId}')`);
    button.className = "btn btn-outline-danger btn-sm";
  }

  compareListLength++;

  const compareListLink = document.getElementById('compare-link');
  if (compareListLink) {
    compareListLink.style.visibility = 'visible';
  }

})
.catch(error => {
  console.error('Error adding facility for comparison:', error);
  const toastContainer = document.getElementById('toast-container');
  if (toastContainer) {
  const toast = document.createElement('div');
  toast.className = 'toast align-items-center text-bg-danger border-0';
  toast.setAttribute('role', 'alert');
  toast.setAttribute('aria-live', 'assertive');
  toast.setAttribute('aria-atomic', 'true');
  toast.innerHTML = `
    <div class="d-flex">
    <div class="toast-body">
      <%= __('compare.toast.addFailure') %>
    </div>
    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
  `;
  toastContainer.appendChild(toast);

  const bootstrapToast = new bootstrap.Toast(toast);
  bootstrapToast.show();

  toast.addEventListener('hidden.bs.toast', () => {
    toast.remove();
  });
  }
});
}

function removeCompareFacility(facilityId) {
axios.post('/compare/remove', {
  facility: facilityId
})
.then(response => {
  const toastContainer = document.getElementById('toast-container');
  if (toastContainer) {
    const toast = document.createElement('div');
    toast.className = 'toast align-items-center text-bg-success border-0';
    toast.setAttribute('role', 'alert');
    toast.setAttribute('aria-live', 'assertive');
    toast.setAttribute('aria-atomic', 'true');
    toast.innerHTML = `
      <div class="d-flex">
        <div class="toast-body">
          <%= __('compare.toast.removeSuccess') %>
        </div>
        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
      </div>
    `;
    toastContainer.appendChild(toast);

    const bootstrapToast = new bootstrap.Toast(toast);
    bootstrapToast.show();

    toast.addEventListener('hidden.bs.toast', () => {
      toast.remove();
    });
  }

  const button = document.querySelector(`button[onclick="removeCompareFacility('${facilityId}')"]`);
  if (button) {
    button.textContent = 'Add to Comparison List';
    button.setAttribute('onclick', `addCompareFacility('${facilityId}')`);
    button.className = 'btn btn-outline-info btn-sm';
  }

  compareListLength--;

  const compareListLink = document.getElementById('compare-link');
  if (compareListLength == 0 && compareListLink) {
    compareListLink.style.visibility = 'hidden';
  }
})
.catch(error => {
  console.error('Error removing facility from comparison list:', error);
  const toastContainer = document.getElementById('toast-container');
  if (toastContainer) {
    const toast = document.createElement('div');
    toast.className = 'toast align-items-center text-bg-danger border-0';
    toast.setAttribute('role', 'alert');
    toast.setAttribute('aria-live', 'assertive');
    toast.setAttribute('aria-atomic', 'true');
    toast.innerHTML = `
      <div class="d-flex">
        <div class="toast-body">
          <%= __('compare.toast.removeFailure') %>
        </div>
        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
      </div>
    `;
    toastContainer.appendChild(toast);

    const bootstrapToast = new bootstrap.Toast(toast);
    bootstrapToast.show();

    toast.addEventListener('hidden.bs.toast', () => {
      toast.remove();
    });
  }
});
}
</script>
<% } %>
<%- include('components/footer') %>
</body>

</html>